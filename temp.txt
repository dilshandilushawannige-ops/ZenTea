import React, { useEffect, useState } from 'react';
import { motion } from 'framer-motion';
import Navbar from '../components/Navbar';
import Footer from '../components/Footer';
import { InventoryAPI, toImageUrl } from '../api/inventoryApi';

const fallbackProductImage = 'https://via.placeholder.com/400x400?text=Product';
const gridVariants = {
  hidden: {},
  visible: {
    transition: {
      staggerChildren: 0.12
    }
  }
};

const cardVariants = {
  hidden: { opacity: 0, y: 30 },
  visible: { opacity: 1, y: 0 }
};

const Shop = () => {
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    let active = true;

    const fetchProducts = async () => {
      try {
        const data = await InventoryAPI.listProductsPublic();
        if (!active) return;
        setProducts(Array.isArray(data) ? data : []);
        setError('');
      } catch (err) {
        if (!active) return;
        const message = err?.response?.data?.message || err?.message || 'Unable to load products right now.';
        setError(message);
      } finally {
        if (active) setLoading(false);
      }
    };

    fetchProducts();
    return () => {
      active = false;
    };
  }, []);

  const formatPrice = (product) => {
    if (product?.price === undefined || product?.price === null || product?.price === '') return '';
    const numeric = Number(product.price);
    if (Number.isNaN(numeric)) return '';
    const currency = (product.currency || 'LKR').toUpperCase();
    return `${currency} ${numeric.toFixed(2)}`;
  };

  const getDescription = (product) => {
    const content = [product?.shortDescription, product?.short_description, product?.description]
      .find((value) => value && String(value).trim());
    if (!content) return '';
    const textValue = String(content).replace(/<[^>]+>/g, '').trim();
    return textValue.length > 140 ? `${textValue.slice(0, 137)}...` : textValue;
  };

  return (
    <>
      <Navbar />
      <div className="min-h-screen">
        {/* Hero Section */}
        <section
          className="min-h-screen relative flex items-start pt-24 md:pt-32 pb-16"
          style={{
            backgroundImage: 'url(/images/shopBg.png)',
            backgroundSize: 'cover',
            backgroundPosition: 'center'
          }}
        >
          <div className="absolute inset-0 bg-gradient-to-b from-transparent to-white/10"></div>
          <div className="container mx-auto px-4 z-10">
            <div className="max-w-3xl mx-auto text-center space-y-6">
              <motion.p
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6 }}
                className="text-[#0b6b3c] text-xs md:text-sm tracking-[0.35em] uppercase font-medium"
              >
                SHOP & LEARN
              </motion.p>
              <motion.h1
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.2 }}
                className="text-[32px] font-semibold text-[#006838] leading-tight"
              >
                bring the wonder of nature to everyday moments with our delicious herbal teas
              </motion.h1>
            </div>
          </div>
        </section>

        {/* Shop Intro Section */}
        <section className="bg-white py-16">
          <div className="container mx-auto px-4">
            <div className="grid md:grid-cols-3 gap-12">
              <div className="md:col-span-2 md:ml-12">
                <h2 className="text-4xl font-semibold text-gray-900">Shop</h2>
                <div className="mt-4 flex items-center gap-2">
                  <span className="h-[2px] w-20 bg-gray-900"></span>
                  <span className="h-px flex-1 bg-gray-200"></span>
                </div>
                <p className="mt-8 text-gray-700 leading-relaxed">
                  Enjoy the perfect cup of Ceylon Tea and feel the magic of our Connoisseur Collection, Premium Collection,
                  luxury teas and herbal infusions that bring a sense of elegance to your cup of tea. We have perfected the art
                  of tea so no matter which variety of ZenTea tea you decide to experience you will always enjoy a cup of Sri
                  Lanka's finest.
                </p>
              </div>
              <div className="md:pl-8">
                <h3 className="text-2xl font-semibold text-gray-900 mb-4">Contact Us</h3>
                <p className="text-gray-700 leading-relaxed">
                  We are here to answer any questions you may have about our products or services.
                </p>
                <p className="mt-6 text-gray-700 leading-relaxed">
                  Reach out to us today and we will respond to you as soon as possible.
                </p>
                <a
                  href="mailto:customercare@zestaceylontea.com"
                  className="mt-6 inline-block text-green-900 font-semibold"
                >
                  customercare@zenteaceylon.com
                </a>
              </div>
            </div>
          </div>
        </section>

        {/* Product Grid Section */}
        <section className="bg-gray-50 py-16">
          <div className="container mx-auto px-4">
            <div className="mb-12 text-center">
              <h2 className="text-3xl font-semibold text-gray-900">Our Products</h2>
              <p className="mt-3 text-gray-600">
                Explore our collection and find the perfect tea for any moment.
              </p>
            </div>

            {error && (
              <div className="rounded-xl border border-red-200 bg-red-50 px-4 py-6 text-red-700">
                {error}
              </div>
            )}

            {loading && !error && (
              <div className="text-center text-gray-600">Loading products...</div>
            )}

            {!loading && !error && products.length === 0 && (
              <div className="rounded-xl border border-gray-200 bg-white px-4 py-12 text-center text-gray-600">
                Products will be available soon. Please check back later.
              </div>
            )}

            {!loading && !error && products.length > 0 && (
              <motion.div
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true, amount: 0.2 }}
                variants={gridVariants}
                className="grid grid-cols-1 justify-center justify-items-center gap-x-6 gap-y-8 md:grid-cols-[repeat(2,236px)] lg:grid-cols-[repeat(4,236px)]"
              >
                {products.map((product, index) => {
                  const rawImage = product?.image;
                  const imageUrl = rawImage ? toImageUrl(rawImage) : '';
                  const displayImage = imageUrl || fallbackProductImage;
                  const price = formatPrice(product);
                  const description = getDescription(product);
                  const name = product?.name || product?.title || 'Product';

                  return (
                    <motion.div
                      key={product?.id ?? product?._id ?? product?.sku ?? index}
                      variants={cardVariants}
                      className="group flex h-[376px] w-[236px] flex-col overflow-hidden rounded-none bg-white shadow-md transition-transform duration-300 hover:shadow-lg hover:scale-[1.02]"
                    >
                      <div className="relative overflow-hidden">
                        <img
                          src={displayImage}
                          alt={name}
                          className="h-[236px] w-full object-cover transition-transform duration-300 group-hover:scale-105"
                          loading="lazy"
                        />
                      </div>
                      <div className="flex flex-1 flex-col px-5 py-5">
                        <h3 className="text-base font-semibold text-gray-900">{name}</h3>
                        {description && (
                          <p className="mt-2 flex-1 text-sm text-gray-600">{description}</p>
                        )}
                        {price && (
                          <p className="mt-4 text-sm font-semibold text-gray-900">{price}</p>
                        )}
                        <div className="mt-auto pt-4">
                          <button
                            type="button"
                            className="w-full rounded-full border border-gray-900 bg-white px-6 py-3 text-base font-medium text-gray-900 transition-colors duration-200 hover:bg-black hover:text-white focus:outline-none focus:ring-2 focus:ring-black focus:ring-offset-2"
                          >
                            Buy now
                          </button>
                        </div>
                      </div>
                    </motion.div>
                  );
                })}
              </motion.div>
            )}
          </div>
        </section>
      </div>
      <Footer />
    </>
  );
};

export default Shop;

